package com.exception.handling.assign;

import java.util.Scanner;

public class BankApp {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		
		Transaction tr=new Transaction();
		System.out.println("Enter 1:Deposit 2:Withdraw 3:Exit");
		int choice=sc.nextInt();
		switch(choice) {
		case 1:tr.addCash();
				break;
		
		case 2:tr.getCash();
				break;
				
		default:System.exit(0);
		}
		
	}

}
class Transaction{
	double amount;
	Scanner sc=new Scanner(System.in);
	SavingAccount sa=new SavingAccount(0);
	void addCash()
	{
		System.out.println("Enter cash to deposit: ");
		amount=sc.nextDouble();
		sa.deposit(amount);
	}
	
	void getCash() {
		try {
			System.out.println("enter amount to withdraw");
			amount=sc.nextDouble();
			double collect=sa.withdraw(amount);
			System.out.println("Collect Cash: :" +collect);
		}
		catch(Exception ex) {
			ex.printStackTrace();
		}	
	}
}

class SavingAccount{
	private long id;
	private double balance;
	private double withdraw;
	private double deposit;
	
	SavingAccount(double balance){
		this.balance=balance;
	
	}
	
	public double withdraw(double amount) throws Exception 
	{
		if(amount>balance) {
			
			InsuffcientBalanceException e= new InsuffcientBalanceException();
		    System.out.println(e.getMessage());
		    throw e;
		    
		}
		else if(amount<0) {
			
			IllegalBankTransactionException ib=new IllegalBankTransactionException();
			System.out.println(ib.getMessage());
			throw ib;
			
		}
		else {
			
				this.balance=this.balance-amount;
				return amount;
				
		}
	}
	
	void deposit(double amount) {
		this.balance=amount;
	}
	
}
class InsuffcientBalanceException extends Exception{
	public String getMessage() {
		return "Insuffcient Balance";
	}
}

class IllegalBankTransactionException extends Exception{
	public String getMessage() {
		return "Illegal Transation";
	}
}